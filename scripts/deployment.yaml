#
# Deploys the book_catalog and inventory_management microservices to Kubernetes.
# 
# To deploy:
#
# export CONTAINER_REGISTRY=<your-container-registry>
# export VERSION=<the-version-to-deploy>
# envsubst < ./scripts/kubernetes/deploy.yaml | kubectl apply -f -
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: library2308-book-catalog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: book-catalog
  template:
    metadata:
      labels:
        app: book-catalog
    spec:
      containers: 
      - name: book-catalog
        image: $CONTAINER_REGISTRY/book_catalog:$VERSION
        imagePullPolicy: IfNotPresent
        env:
        - name: PORT
          value: "4000"
        - name: DATABASE_URL
          value: "postgresql://library_8pmx_user:E2SLyuvsUHUcLgjMxXbx6mGSfNpU4y6Y@dpg-cs0e3ga3esus7390ovvg-a.oregon-postgres.render.com/library_8pmx"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: library2308-inventory-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inventory-management
  template:
    metadata:
      labels:
        app: inventory-management
    spec:
      containers: 
      - name: inventory-management
        image: $CONTAINER_REGISTRY/inventory_management:$VERSION
        imagePullPolicy: IfNotPresent
        env:
        - name: PORT
          value: "4001"
        - name: DATABASE_URL
          value: "postgresql://library_8pmx_user:E2SLyuvsUHUcLgjMxXbx6mGSfNpU4y6Y@dpg-cs0e3ga3esus7390ovvg-a.oregon-postgres.render.com/library_8pmx"
---
apiVersion: v1
kind: Service
metadata:
  name: library2308-book-catalog
spec:
  selector:
    app: book-catalog
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4000
---
apiVersion: v1
kind: Service
metadata:
  name: library2308-inventory-management
spec:
  selector:
    app: inventory-management
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4001
